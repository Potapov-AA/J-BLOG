import { defineStore } from "pinia";

const STORE_NAME = "recipes";

const defaultValueFood = [
  {
    id: 0,
    title: "Яичница",
    calories: {
      proteins: 12.9,
      fats: 20.9,
      carbohydrates: 0.9,
    },
    time: 15,
    ingridients: [
      ["Яйцо", 1, "шт"],
      ["Сливочное масло", 10, "гр"],
      ["Соль", NaN, "по вкусу"],
      ["Перец", NaN, "по вкусу"],
    ],
    steps: [
      "Сковородку с невысокими бортами разогрейте на сильном огне. Добавьте кусочек сливочного масла и растопите его до жидкого состояния. Огонь убавьте до среднего.",
      "Вбейте яйцо в сковороду с раскалённым маслом. Постарайтесь не повредить целостность желтка. Круговыми движениями распределите белок так, чтобы он равномерно растёкся по сковороде.",
      "Жарьте яичницу до такого состояния, пока белок полностью не схватится, а желток ещё будет ярко-жёлтым и жидким. Время приготовления яичницы будет зависеть от множества факторов таких, как: размер сковороды, количество яиц и сила огня. Я жарила свою яичницу всего пять минут. Не стоит накрывать яичницу крышкой, иначе желток станет твёрдым.",
      "После того, как яичница достигла необходимой степени готовности, можно слегка посолить её по вкусу. Я ещё посыпаю глазунью свежемолотым острым перцем. Приятного аппетита!",
    ],
    difficulty: 1,
    isFavorite: false
  },
];

const defaultValueDrink = [
  {
    id: 0,
    title: "Куба Либре",
    ingridients: [
      ["Золотой ром", 50, "мл"],
      ["Лаймовый сок", 10, "мл"],
      ["Кола", 140, "мл"],
      ["Лайм", 20, "гр"],
      ["Лед", 180, "гр"],
    ],
    steps: [
      "Наполни хайбол кубиками льда доверху",
      "Налей лаймовый сок 10 мл и золотой ром 50 мл",
      "Долей колу доверху и аккуратно размешай коктейльной ложкой",
      "Укрась кружками лайма",
    ],
    difficulty: 1,
    isFavorite: true
  },
];

const getValueFood = () => {
  const value = localStorage.getItem(STORE_NAME);

  return value ? JSON.parse(value) : defaultValueFood;
};

const getValueDrink = () => {
  const value = localStorage.getItem(STORE_NAME);

  return value ? JSON.parse(value) : defaultValueDrink;
};

export const useRecipeStore = defineStore(STORE_NAME, {
  state: () => ({
    foods: getValueFood(),
    drinks: getValueDrink(),
  }),
  actions: {
    addRecipe() {
      return 1;
    },
  },
});
