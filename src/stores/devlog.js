import { defineStore } from "pinia";

const STORE_NAME = "devlog";

const defaultValue = [
  {
    id: 5,
    title: "Узнал о изменениях в задании на работе",
    description:
      "Узнал про изменения в задании, что планирую взять после того как сверстаю основу для миниБЛОГа. Если в кратце, то там было сказано, что нужно юзать Vuetify, фреймворк UI-компонентов. Щас научил его подключать, а также использовать дефолтные компоненты."
  },
  {
    id: 4,
    title: "Готов начальный вид для библиотеки",
    description:
      "Сделал по итогу начальный вид для странички с книгами. Теперь осталось решить следующие проблемы. Во-первых, нужно сделать чтобы отображались все книги, ибо пока что все отображаются только в том случае, если число книг кратно 12-ти. Во-вторых, доделать внешний вид карточек. В-третьих, сделать нормальное отображение для стрелок карусели. В-четвертых, перенсти карточку книги в отдельную компоненту.",
  },
  {
    id: 3,
    title: "Перенес статьи на отдельную компоненту",
    description:
      "Мне подкинули идею перенести статьи на отдельную компоненту, что я собственно и сделал, в целом оказалось даже удобнее, теперь потенциально ее можно использовать еще где-нибудь. Как мысль, например на главной странице сайта, указать статистку, например, последние книги и последняя запись devlog-а",
  },
  {
    id: 2,
    title: "Накидал макет библиотеки",
    description:
      "Накидал быстрый макет на бумаги для раздела с книгами, получилось на первый взгляд неплохо, осталось это все сверстать и посмотреть на то, что по итогу получится, в основу идеи для данного раздела легла механика карусели.",
  },
  {
    id: 1,
    title: "Доделал devlog",
    description:
      "Доделал devlog до планируемого состояния. Сейчас занимаюсь чисто визуальной состовляющей сайта, поэтому не подсасываю никаких API. По сути сейчас все данные записей devlog-а храняться в локальном хранилище браузера. Из плюсов быстрая реализация и заодно разобрался, как работать с локальным хранилищем. Из минусов, данные легко потерять. Поэтому решил полноценные записи, которые потом перекочуют в БД (предположительно в MongoDB) сделать как дефолтную константу, которую можно потерять, если только удалить ее.",
  },
  {
    id: 0,
    title: "Начал делать devlog",
    description:
      'Начал проробавтывать внешний вид раздела "Дневник разработчика", прописал дефолтные значения для первой записи. Нарисовал на бумаге быстрый эскиз того что хочу увидет по итогу для каждой записи. В целом получилось минималистично и очень приятно.',
  },
];

const getValue = () => {
  const value = localStorage.getItem(STORE_NAME);

  return value ? JSON.parse(value) : defaultValue;
};

export const useDevlogStore = defineStore(STORE_NAME, {
  state: () => ({
    articels: getValue(),
  }),
  actions: {
    addArticels(title, description) {
      let lengthArray = this.articels.length;

      if (lengthArray == 0) {
        this.articels.push({ id: 0, title, description });
      } else {
        this.articels.push({
          id: this.articels[0].id + 1,
          title,
          description,
        });
      }

      this.articels.sort((a, b) => {
        return a.id < b.id ? 1 : -1;
      });

      localStorage.setItem(STORE_NAME, JSON.stringify(this.articels));
    },
  },
});
